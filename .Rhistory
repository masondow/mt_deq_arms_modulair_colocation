pollutant = "PM2.5",
NAAQS = c("pm2.5_2024", "pm2.5"),
conversionArray = NULL
))
monitor_colors <- c("FEM 1020" = "#1b9e77",
"FEM 1022" = "#66c2a5",
"FEM thermo" = "#a6d854",
"Modulair PM2.5" = "#d95f02",
"PurpleAir PM2.5" = "#7570b3",
"FEM" = "#1b9e77"
monitor_colors <- c("FEM 1020" = "#1b9e77",
"FEM 1022" = "#66c2a5",
"FEM thermo" = "#a6d854",
"Modulair PM2.5" = "#d95f02",
"PurpleAir PM2.5" = "#7570b3",
"FEM" = "#1b9e77")
# Prepare data for boxplot for rp site and recode sensor names
rp_pm25 <- rp_data %>%
select(datetime, rp_1020, rp_1022, rp_thermo, rp_modulair_pm25, rp_purpleair_cf1) %>%
pivot_longer(-datetime, names_to = "monitor", values_to = "pm25") %>%
mutate(monitor = case_when(
monitor == "rp_1020" ~ "1020 BAM",
monitor == "rp_1022" ~ "1022 BAM",
monitor == "rp_thermo" ~ "Thermo BAM",
monitor == "rp_modulair_pm25" ~ "Modulair PM2.5",
monitor == "rp_purpleair_cf1" ~ "PurpleAir PM2.5",
TRUE ~ monitor
))
ggplot(rp_pm25, aes(x = monitor, y = pm25, fill = monitor)) +
geom_boxplot() +
scale_fill_manual(values = monitor_colors) +
labs(title = "PM2.5 Distribution at RP Site",
x = "Monitor",
y = "PM2.5 (µg/m³)") +
theme(legend.position = "none")
# Prepare data for boxplot for rp site and recode sensor names
# RP site
rp_pm25 <- rp_data %>%
select(datetime, rp_1020, rp_1022, rp_thermo, rp_modulair_pm25, rp_purpleair_cf1) %>%
pivot_longer(-datetime, names_to = "monitor", values_to = "pm25") %>%
mutate(monitor = case_when(
monitor == "rp_1020" ~ "1020 BAM",
monitor == "rp_1022" ~ "1022 BAM",
monitor == "rp_thermo" ~ "Thermo BAM",
monitor == "rp_modulair_pm25" ~ "Modulair PM2.5",
monitor == "rp_purpleair_cf1" ~ "PurpleAir PM2.5",
TRUE ~ monitor
))
ggplot(rp_pm25, aes(x = monitor, y = pm25, fill = monitor)) +
geom_boxplot() +
scale_fill_manual(values = monitor_colors) +
labs(title = "PM2.5 Distribution at RP Site",
x = "Monitor",
y = "PM2.5 (µg/m³)") +
theme(legend.position = "none")
# NC site
nc_pm25 <- nc_data %>%
select(datetime, nc_fem_avg, nc_modulair_pm25, nc_purpleair_cf1) %>%
pivot_longer(-datetime, names_to = "monitor", values_to = "pm25") %>%
mutate(monitor = case_when(
monitor == "nc_fem_avg" ~ "FEM",
monitor == "nc_modulair_pm25" ~ "Modulair PM2.5",
monitor == "nc_purpleair_cf1" ~ "PurpleAir PM2.5",
TRUE ~ monitor
))
# Prepare data for boxplot for rp site and recode sensor names
# RP site
rp_pm25 <- rp_data %>%
select(datetime, rp_1020, rp_1022, rp_thermo, rp_modulair_pm25, rp_purpleair_cf1) %>%
pivot_longer(-datetime, names_to = "monitor", values_to = "pm25") %>%
mutate(monitor = case_when(
monitor == "rp_1020" ~ "1020 BAM",
monitor == "rp_1022" ~ "1022 BAM",
monitor == "rp_thermo" ~ "Thermo BAM",
monitor == "rp_modulair_pm25" ~ "Modulair PM2.5",
monitor == "rp_purpleair_cf1" ~ "PurpleAir PM2.5",
TRUE ~ monitor
))
ggplot(rp_pm25, aes(x = monitor, y = pm25, fill = monitor)) +
geom_boxplot() +
scale_fill_manual(values = monitor_colors) +
labs(title = "PM2.5 Distribution at RP Site",
x = "Monitor",
y = "PM2.5 (µg/m³)") +
theme(legend.position = "none")
# NC site
nc_pm25 <- nc_data %>%
select(datetime, nc_1020, nc_modulair_pm25, nc_purpleair_cf1) %>%
pivot_longer(-datetime, names_to = "monitor", values_to = "pm25") %>%
mutate(monitor = case_when(
monitor == "nc_1020" ~ "1020",
monitor == "nc_modulair_pm25" ~ "Modulair PM2.5",
monitor == "nc_purpleair_cf1" ~ "PurpleAir PM2.5",
TRUE ~ monitor
))
ggplot(nc_pm25, aes(x = monitor, y = pm25, fill = monitor)) +
geom_boxplot() +
scale_fill_manual(values = monitor_colors) +
labs(title = "PM2.5 Distribution at NC Site",
x = "Monitor",
y = "PM2.5 (µg/m³)") +
theme(legend.position = "none")
# Prepare data for boxplot for rp site and recode sensor names
# RP site
rp_pm25 <- rp_data %>%
select(datetime, rp_1020, rp_1022, rp_thermo, rp_modulair_pm25, rp_purpleair_cf1) %>%
pivot_longer(-datetime, names_to = "monitor", values_to = "pm25") %>%
mutate(monitor = case_when(
monitor == "rp_1020" ~ "1020 BAM",
monitor == "rp_1022" ~ "1022 BAM",
monitor == "rp_thermo" ~ "Thermo BAM",
monitor == "rp_modulair_pm25" ~ "Modulair PM2.5",
monitor == "rp_purpleair_cf1" ~ "PurpleAir PM2.5",
TRUE ~ monitor
))
ggplot(rp_pm25, aes(x = monitor, y = pm25, fill = monitor)) +
geom_boxplot() +
scale_fill_manual(values = monitor_colors) +
labs(title = "PM2.5 Distribution at RP Site",
x = "Monitor",
y = "PM2.5 (µg/m³)") +
theme(legend.position = "none")
# NC site
nc_pm25 <- nc_data %>%
select(datetime, nc_1020, nc_modulair_pm25, nc_purpleair_cf1) %>%
pivot_longer(-datetime, names_to = "monitor", values_to = "pm25") %>%
mutate(monitor = case_when(
monitor == "nc_1020" ~ "1020",
monitor == "nc_modulair_pm25" ~ "Modulair PM2.5",
monitor == "nc_purpleair_cf1" ~ "PurpleAir PM2.5",
TRUE ~ monitor
))
ggplot(nc_pm25, aes(x = monitor, y = pm25, fill = monitor)) +
geom_boxplot() +
scale_fill_manual(values = monitor_colors) +
labs(title = "PM2.5 Distribution at NC Site",
x = "Monitor",
y = "PM2.5 (µg/m³)") +
theme(legend.position = "none")
# LT site
lt_pm25 <- lt_data %>%
select(datetime, lt_fem_avg, lt_modulair_pm25, lt_purpleair_cf1) %>%
pivot_longer(-datetime, names_to = "monitor", values_to = "pm25") %>%
mutate(monitor = case_when(
monitor == "lt_thermo" ~ "Thermo",
monitor == "lt_modulair_pm25" ~ "Modulair PM2.5",
monitor == "lt_purpleair_cf1" ~ "PurpleAir PM2.5",
TRUE ~ monitor
))
# Prepare data for boxplot for rp site and recode sensor names
# RP site
rp_pm25 <- rp_data %>%
select(datetime, rp_1020, rp_1022, rp_thermo, rp_fem_avg, rp_modulair_pm25, rp_purpleair_cf1) %>%
pivot_longer(-datetime, names_to = "monitor", values_to = "pm25") %>%
mutate(monitor = case_when(
monitor == "rp_1020" ~ "1020 BAM",
monitor == "rp_1022" ~ "1022 BAM",
monitor == "rp_thermo" ~ "Thermo BAM",
monitor == "rp_modulair_pm25" ~ "Modulair PM2.5",
monitor == "rp_purpleair_cf1" ~ "PurpleAir PM2.5",
TRUE ~ monitor
))
ggplot(rp_pm25, aes(x = monitor, y = pm25, fill = monitor)) +
geom_boxplot() +
scale_fill_manual(values = monitor_colors) +
labs(title = "PM2.5 Distribution at RP Site",
x = "Monitor",
y = "PM2.5 (µg/m³)") +
theme(legend.position = "none")
# NC site
nc_pm25 <- nc_data %>%
select(datetime, nc_1020, nc_modulair_pm25, nc_purpleair_cf1) %>%
pivot_longer(-datetime, names_to = "monitor", values_to = "pm25") %>%
mutate(monitor = case_when(
monitor == "nc_1020" ~ "1020",
monitor == "nc_modulair_pm25" ~ "Modulair PM2.5",
monitor == "nc_purpleair_cf1" ~ "PurpleAir PM2.5",
TRUE ~ monitor
))
ggplot(nc_pm25, aes(x = monitor, y = pm25, fill = monitor)) +
geom_boxplot() +
scale_fill_manual(values = monitor_colors) +
labs(title = "PM2.5 Distribution at NC Site",
x = "Monitor",
y = "PM2.5 (µg/m³)") +
theme(legend.position = "none")
# LT site
lt_pm25 <- lt_data %>%
select(datetime, lt_thermo, lt_modulair_pm25, lt_purpleair_cf1) %>%
pivot_longer(-datetime, names_to = "monitor", values_to = "pm25") %>%
mutate(monitor = case_when(
monitor == "lt_thermo" ~ "Thermo",
monitor == "lt_modulair_pm25" ~ "Modulair PM2.5",
monitor == "lt_purpleair_cf1" ~ "PurpleAir PM2.5",
TRUE ~ monitor
))
ggplot(lt_pm25, aes(x = monitor, y = pm25, fill = monitor)) +
geom_boxplot() +
scale_fill_manual(values = monitor_colors) +
labs(title = "PM2.5 Distribution at LT Site",
x = "Monitor",
y = "PM2.5 (µg/m³)") +
theme(legend.position = "none")
monitor_colors <- c("1020" = "#1b9e77",
"1022" = "#66c2a5",
"Thermo" = "#a6d854",
"FEM Average" ="#color"
"Modulai" = "#d95f02",
monitor_colors <- c("1020" = "yellow",
"1022" = "red",
"Thermo" = "tan",
"FEM Average" ="green"
"Modulair" = "orange",
monitor_colors <- c("1020" = "yellow",
"1022" = "red",
"Thermo" = "tan",
"FEM Average" ="green",
"Modulair" = "orange",
"PurpleAir" = "purple")
# Prepare data for boxplot for rp site and recode sensor names
# RP site
rp_pm25 <- rp_data %>%
select(datetime, rp_1020, rp_1022, rp_thermo, rp_fem_avg, rp_modulair_pm25, rp_purpleair_cf1) %>%
pivot_longer(-datetime, names_to = "monitor", values_to = "pm25") %>%
mutate(monitor = case_when(
monitor == "rp_1020" ~ "1020",
monitor == "rp_1022" ~ "1022",
monitor == "rp_thermo" ~ "Thermo",
monitor == "rp_fem_avg" ~ "FEM Average",
monitor == "rp_modulair_pm25" ~ "Modulair",
monitor == "rp_purpleair_cf1" ~ "PurpleAir",
TRUE ~ monitor
))
ggplot(rp_pm25, aes(x = monitor, y = pm25, fill = monitor)) +
geom_boxplot() +
scale_fill_manual(values = monitor_colors) +
labs(title = "PM2.5 Distribution at RP Site",
x = "Monitor",
y = "PM2.5 (µg/m³)") +
theme(legend.position = "none")
# NC site
nc_pm25 <- nc_data %>%
select(datetime, nc_1020, nc_modulair_pm25, nc_purpleair_cf1) %>%
pivot_longer(-datetime, names_to = "monitor", values_to = "pm25") %>%
mutate(monitor = case_when(
monitor == "nc_1020" ~ "1020",
monitor == "nc_modulair_pm25" ~ "Modulair PM2.5",
monitor == "nc_purpleair_cf1" ~ "PurpleAir PM2.5",
TRUE ~ monitor
))
ggplot(nc_pm25, aes(x = monitor, y = pm25, fill = monitor)) +
geom_boxplot() +
scale_fill_manual(values = monitor_colors) +
labs(title = "PM2.5 Distribution at NC Site",
x = "Monitor",
y = "PM2.5 (µg/m³)") +
theme(legend.position = "none")
# LT site
lt_pm25 <- lt_data %>%
select(datetime, lt_thermo, lt_modulair_pm25, lt_purpleair_cf1) %>%
pivot_longer(-datetime, names_to = "monitor", values_to = "pm25") %>%
mutate(monitor = case_when(
monitor == "lt_thermo" ~ "Thermo",
monitor == "lt_modulair_pm25" ~ "Modulair PM2.5",
monitor == "lt_purpleair_cf1" ~ "PurpleAir PM2.5",
TRUE ~ monitor
))
ggplot(lt_pm25, aes(x = monitor, y = pm25, fill = monitor)) +
geom_boxplot() +
scale_fill_manual(values = monitor_colors) +
labs(title = "PM2.5 Distribution at LT Site",
x = "Monitor",
y = "PM2.5 (µg/m³)") +
theme(legend.position = "none")
# rp site
ggplot(rp_data, aes(x = datetime)) +
geom_line(aes(y = rp_1020, color = "1020")) +
geom_line(aes(y = rp_1022, color = "1022")) +
geom_line(aes(y = rp_thermo, color = "Thermo")) +
geom_line(aes(y = rp_modulair_pm25, color = "Modulair")) +
geom_line(aes(y = rp_purpleair_cf1, color = "PurpleAir")) +
scale_color_manual(values = monitor_colors) +
labs(title = "PM2.5 Time Series at RP Site",
x = "Datetime",
y = "PM2.5 (µg/m³)",
color = "Monitor Type")
# Prepare data for boxplot for rp site and recode sensor names
# RP site
rp_pm25 <- rp_data %>%
select(datetime, rp_1020, rp_1022, rp_thermo, rp_fem_avg, rp_modulair_pm25, rp_purpleair_cf1) %>%
pivot_longer(-datetime, names_to = "monitor", values_to = "pm25") %>%
mutate(monitor = case_when(
monitor == "rp_1020" ~ "1020",
monitor == "rp_1022" ~ "1022",
monitor == "rp_thermo" ~ "Thermo",
monitor == "rp_fem_avg" ~ "FEM Average",
monitor == "rp_modulair_pm25" ~ "Modulair",
monitor == "rp_purpleair_cf1" ~ "PurpleAir",
TRUE ~ monitor
))
ggplot(rp_pm25, aes(x = monitor, y = pm25, fill = monitor)) +
geom_boxplot() +
scale_fill_manual(values = monitor_colors) +
labs(title = "PM2.5 Distribution at RP Site",
x = "Monitor",
y = "PM2.5 (µg/m³)") +
theme(legend.position = "none")
# NC site
nc_pm25 <- nc_data %>%
select(datetime, nc_1020, nc_modulair_pm25, nc_purpleair_cf1) %>%
pivot_longer(-datetime, names_to = "monitor", values_to = "pm25") %>%
mutate(monitor = case_when(
monitor == "nc_1020" ~ "1020",
monitor == "nc_modulair_pm25" ~ "Modulair",
monitor == "nc_purpleair_cf1" ~ "PurpleAir",
TRUE ~ monitor
))
ggplot(nc_pm25, aes(x = monitor, y = pm25, fill = monitor)) +
geom_boxplot() +
scale_fill_manual(values = monitor_colors) +
labs(title = "PM2.5 Distribution at NC Site",
x = "Monitor",
y = "PM2.5 (µg/m³)") +
theme(legend.position = "none")
# LT site
lt_pm25 <- lt_data %>%
select(datetime, lt_thermo, lt_modulair_pm25, lt_purpleair_cf1) %>%
pivot_longer(-datetime, names_to = "monitor", values_to = "pm25") %>%
mutate(monitor = case_when(
monitor == "lt_thermo" ~ "Thermo",
monitor == "lt_modulair_pm25" ~ "Modulair",
monitor == "lt_purpleair_cf1" ~ "PurpleAir",
TRUE ~ monitor
))
ggplot(lt_pm25, aes(x = monitor, y = pm25, fill = monitor)) +
geom_boxplot() +
scale_fill_manual(values = monitor_colors) +
labs(title = "PM2.5 Distribution at LT Site",
x = "Monitor",
y = "PM2.5 (µg/m³)") +
theme(legend.position = "none")
# rp site
ggplot(rp_data, aes(x = datetime)) +
geom_line(aes(y = rp_1020, color = "1020")) +
geom_line(aes(y = rp_1022, color = "1022")) +
geom_line(aes(y = rp_thermo, color = "Thermo")) +
geom_line(aes(y = rp_modulair_pm25, color = "Modulair")) +
geom_line(aes(y = rp_purpleair_cf1, color = "PurpleAir")) +
scale_color_manual(values = monitor_colors) +
labs(title = "PM2.5 Time Series at RP Site",
x = "Datetime",
y = "PM2.5 (µg/m³)",
color = "Monitor Type")
# nc site
ggplot(nc_data, aes(x = datetime)) +
geom_line(aes(y = nc_1020, color = "1020")) +
geom_line(aes(y = nc_modulair_pm25, color = "Modulair")) +
geom_line(aes(y = nc_purpleair_cf1, color = "PurpleAir")) +
scale_color_manual(values = monitor_colors) +
labs(title = "PM2.5 Time Series at NC Site",
x = "Datetime",
y = "PM2.5 (µg/m³)",
color = "Monitor Type")
# lt site
ggplot(nc_data, aes(x = datetime)) +
geom_line(aes(y = lt_thermo, color = "Thermo")) +
geom_line(aes(y = lt_modulair_pm25, color = "Modulair")) +
geom_line(aes(y = lt_purpleair_cf1, color = "PurpleAir")) +
scale_color_manual(values = monitor_colors) +
labs(title = "PM2.5 Time Series at LT Site",
x = "Datetime",
y = "PM2.5 (µg/m³)",
color = "Monitor Type")
# lt site
ggplot(lt_data, aes(x = datetime)) +
geom_line(aes(y = lt_thermo, color = "Thermo")) +
geom_line(aes(y = lt_modulair_pm25, color = "Modulair")) +
geom_line(aes(y = lt_purpleair_cf1, color = "PurpleAir")) +
scale_color_manual(values = monitor_colors) +
labs(title = "PM2.5 Time Series at LT Site",
x = "Datetime",
y = "PM2.5 (µg/m³)",
color = "Monitor Type")
# rp site
ggplot(rp_data, aes(x = datetime)) +
geom_line(aes(y = rp_1020, color = "1020")) +
geom_line(aes(y = rp_1022, color = "1022")) +
geom_line(aes(y = rp_thermo, color = "Thermo")) +
geom_line(aes(y = rp_modulair_pm25, color = "Modulair")) +
geom_line(aes(y = rp_purpleair_cf1, color = "PurpleAir")) +
scale_color_manual(values = monitor_colors) +
labs(title = "PM2.5 Time Series at RP Site",
x = "Datetime",
y = "PM2.5 (µg/m³)",
color = "Monitor Type")
# nc site
ggplot(nc_data, aes(x = datetime)) +
geom_line(aes(y = nc_1020, color = "1020")) +
geom_line(aes(y = nc_modulair_pm25, color = "Modulair")) +
geom_line(aes(y = nc_purpleair_cf1, color = "PurpleAir")) +
scale_color_manual(values = monitor_colors) +
labs(title = "PM2.5 Time Series at NC Site",
x = "Datetime",
y = "PM2.5 (µg/m³)",
color = "Monitor Type")
# lt site
ggplot(lt_data, aes(x = datetime)) +
geom_line(aes(y = lt_thermo, color = "Thermo")) +
geom_line(aes(y = lt_modulair_pm25, color = "Modulair")) +
geom_line(aes(y = lt_purpleair_cf1, color = "PurpleAir")) +
scale_color_manual(values = monitor_colors) +
labs(title = "PM2.5 Time Series at LT Site",
x = "Datetime",
y = "PM2.5 (µg/m³)",
color = "Monitor Type")
# For rp site:
rp_data <- rp_data %>%
mutate(rp_modulair_aqi = aqiCategories(
rp_modulair_pm25,
pollutant = "PM2.5",
NAAQS = "pm2.5_2024",
conversionArray = NULL
),
rp_purpleair_aqi = aqiCategories(
rp_purpleair_cf1,
pollutant = "PM2.5",
NAAQS = "pm2.5_2024",
conversionArray = NULL
),
rp_fem_aqi = aqiCategories(
rp_fem_avg,
pollutant = "PM2.5",
NAAQS = "pm2.5_2024",
conversionArray = NULL
))
# For rp site:
rp_data <- rp_data %>%
mutate(rp_modulair_aqi = aqiCategories(
rp_modulair_pm25,
pollutant = c("PM2.5"),
NAAQS = c("pm2.5_2024"),
conversionArray = NULL
),
rp_purpleair_aqi = aqiCategories(
rp_purpleair_cf1,
pollutant = "PM2.5",
NAAQS = "pm2.5_2024",
conversionArray = NULL
),
rp_fem_aqi = aqiCategories(
rp_fem_avg,
pollutant = "PM2.5",
NAAQS = "pm2.5_2024",
conversionArray = NULL
))
# For rp site:
rp_data <- rp_data %>%
mutate(rp_modulair_aqi = aqiCategories(
rp_modulair_pm25,
pollutant = c("PM2.5"),
NAAQS = c("pm2.5_2024", "pm2.5"),
conversionArray = NULL
),
rp_purpleair_aqi = aqiCategories(
rp_purpleair_cf1,
pollutant = "PM2.5",
NAAQS = "pm2.5_2024",
conversionArray = NULL
),
rp_fem_aqi = aqiCategories(
rp_fem_avg,
pollutant = "PM2.5",
NAAQS = "pm2.5_2024",
conversionArray = NULL
))
# Function to calculate accuracy metrics
calculate_metrics <- function(true_values, predicted_values) {
# Remove missing values
valid_idx <- !is.na(true_values) & !is.na(predicted_values)
true_vals <- true_values[valid_idx]
pred_vals <- predicted_values[valid_idx]
# Linear regression to obtain slope, intercept, and R-squared
fit <- lm(pred_vals ~ true_vals)
slope <- coef(fit)[2]
intercept <- coef(fit)[1]
r_squared <- summary(fit)$r.squared
# Calculate residuals and error metrics
residuals <- true_vals - pred_vals
mae <- mean(abs(residuals))
rmse <- sqrt(mean(residuals^2))
nrmse <- rmse / mean(true_vals) * 100  # Expressed as percentage
tibble(
R_squared = r_squared,
MAE = mae,
RMSE = rmse,
NRMSE = nrmse,
Slope = slope,
Intercept = intercept
)
}
# Overall metrics for rp site (modulair vs. fem)
metrics_rp <- calculate_metrics(rp_data$rp_fem_avg, rp_data$rp_modulair_pm25)
print(metrics_rp)
# Accuracy metrics stratified by AQI category for rp site
metrics_by_aqi_rp <- rp_data %>%
group_by(rp_fem_aqi) %>%
summarise(
R_squared = cor(rp_fem_avg, rp_modulair_pm25, use = "complete.obs")^2,
MAE = mean(abs(rp_fem_avg - rp_modulair_pm25), na.rm = TRUE),
RMSE = sqrt(mean((rp_fem_avg - rp_modulair_pm25)^2, na.rm = TRUE)),
NRMSE = (sqrt(mean((rp_fem_avg - rp_modulair_pm25)^2, na.rm = TRUE)) / mean(rp_fem_avg, na.rm = TRUE)) * 100
)
